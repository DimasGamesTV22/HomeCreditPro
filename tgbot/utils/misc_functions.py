# - *- coding: utf- 8 - *-
import asyncio
import json

import requests
from aiogram import Dispatcher
from bs4 import BeautifulSoup

from tgbot.data.config import get_admins, BOT_VERSION, BOT_DESCRIPTION
from tgbot.keyboards.reply_z_all import menu_frep
from tgbot.loader import bot
from tgbot.services.api_sqlite import get_settingsx, update_settingsx, get_userx, get_purchasesx, get_all_positionsx, \
    update_positionx, get_all_categoriesx, get_all_purchasesx, get_all_refillx, get_all_usersx, get_all_itemsx, \
    get_itemsx, get_positionx, get_categoryx
from tgbot.utils.const_functions import get_unix, convert_day


# –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
async def on_startup_notify(dp: Dispatcher):
    if len(get_admins()) >= 1:
        await send_admins(f"<b>‚úÖ –ë–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω</b>\n"
                          f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                          f"{BOT_DESCRIPTION}\n"
                          f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                          f"<code>‚ùó –î–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞.</code>",
                          markup="default")
        await check_update()

# –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
async def send_admins(message, markup=None, not_me=0):
    for admin in get_admins():
        if markup == "default": markup = menu_frep(admin)

        try:
            if str(admin) != str(not_me):
                await bot.send_message(admin, message, reply_markup=markup, disable_web_page_preview=True)
        except:
            pass


# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Å–ª–µ 00:00
async def update_profit_day():
    await send_admins(get_statisctics())

    update_settingsx(misc_profit_day=get_unix())


# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 00:01
async def update_profit_week():
    update_settingsx(misc_profit_week=get_unix())


# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
async def check_update():
    update_link = "https://sites.google.com/view/check-update-autoshop/main-page"

    response = requests.get(update_link)
    soup_parse = BeautifulSoup(response.text, "html.parser")
    get_bot_info = soup_parse.select("p[class$='CDt4Ke zfr3Q']")[0].text.split("=")

    if float(get_bot_info[0]) > float(BOT_VERSION):
        update_description = "\n".join(get_bot_info[2].split("**"))

        await send_admins(f"<b>‚ùá –í—ã—à–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ‚ùá</b>\n"
                          f"<a href='{get_bot_info[1]}'><b>‚ñ∂ –°–∫–∞—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</b></a>\n"
                          f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                          f"{update_description}\n"
                          f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                          f"<code>‚ùó –î–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞.</code>")


# –ü–æ–ª—É—á–µ–Ω–∏–µ faq
def get_faq(user_id, send_message):
    get_user = get_userx(user_id=user_id)

    if "{user_id}" in send_message:
        send_message = send_message.replace("{user_id}", f"<b>{get_user['user_id']}</b>")
    if "{username}" in send_message:
        send_message = send_message.replace("{username}", f"<b>{get_user['user_login']}</b>")
    if "{firstname}" in send_message:
        send_message = send_message.replace("{firstname}", f"<b>{get_user['user_name']}</b>")

    return send_message


# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ö–æ—Å—Ç–∏–Ω–≥
async def upload_text(dp, get_text):
    session = await (dp.bot['rSession']).get_session()

    spare_pass = False
    await asyncio.sleep(0.5)

    try:
        response = await session.post("http://pastie.org/pastes/create",
                                      data={"language": "plaintext", "content": get_text})

        get_link = response.url
        if "create" in str(get_link): spare_pass = True
    except:
        spare_pass = True

    if spare_pass:
        response = await session.post("https://www.friendpaste.com",
                                      json={"language": "text", "title": "", "snippet": get_text})

        get_link = json.loads((await response.read()).decode())['url']

    return get_link


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏–µ –ë–î –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –±–æ—Ç–∞, –≤ –Ω–æ–≤–æ–≥–æ –∏–ª–∏ —É–∫–∞–∑–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞
async def check_bot_data():
    get_login = get_settingsx()['misc_bot']
    get_bot = await bot.get_me()

    if get_login not in [get_bot.username, "None"]:
        get_positions = get_all_positionsx()

        for position in get_positions:
            update_positionx(position['position_id'], position_photo="")

    update_settingsx(misc_bot=get_bot.username)


# –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞
def get_position_admin(position_id):
    get_items = get_itemsx(position_id=position_id)
    get_position = get_positionx(position_id=position_id)
    get_category = get_categoryx(category_id=get_position['category_id'])

    text_description = "<code>–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚ùå</code>"
    photo_text = "<code>–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚ùå</code>"
    get_photo = None

    if len(get_position['position_photo']) >= 5:
        photo_text = "<code>–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚úÖ</code>"
        get_photo = get_position['position_photo']

    if get_position['position_description'] != "0":
        text_description = f"\n{get_position['position_description']}"

    get_message = f"<b>üìÅ –ü–æ–∑–∏—Ü–∏—è: <code>{get_position['position_name']}</code></b>\n" \
                  f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                  f"üóÉ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <code>{get_category['category_name']}</code>\n" \
                  f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: <code>{get_position['position_price']}‚ÇΩ</code>\n" \
                  f"üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>{len(get_items)}—à—Ç</code>\n" \
                  f"üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {photo_text}\n" \
                  f"üìú –û–ø–∏—Å–∞–Ω–∏–µ: {text_description}"

    return get_message, get_photo


# –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
def open_profile_my(user_id):
    get_purchases = get_purchasesx(user_id=user_id)
    get_user = get_userx(user_id=user_id)
    count_items = 0

    how_days = int(get_unix() - get_user['user_unix']) // 60 // 60 // 24

    if len(get_purchases) >= 1:
        for items in get_purchases:
            count_items += int(items['purchase_count'])

    return f"<b>üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n" \
           f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
           f"üÜî ID: <code>{get_user['user_id']}</code>\n" \
           f"üí∞ –ë–∞–ª–∞–Ω—Å: <code>{get_user['user_balance']}‚ÇΩ</code>\n" \
           f"üéÅ –ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{count_items}—à—Ç</code>\n" \
           f"üï∞ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: <code>{get_user['user_date'].split(' ')[0]} ({convert_day(how_days)})</code>"


# –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–∏ –ø–æ–∏—Å–∫–µ
def open_profile_search(user_id):
    get_purchases = get_purchasesx(user_id=user_id)
    get_user = get_userx(user_id=user_id)
    count_items = 0

    how_days = int(get_unix() - get_user['user_unix']) // 60 // 60 // 24

    if len(get_purchases) >= 1:
        for items in get_purchases:
            count_items += items['purchase_count']

    return f"<b>üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <a href='tg://user?id={get_user['user_id']}'>{get_user['user_name']}</a></b>\n" \
           f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
           f"üÜî ID: <code>{get_user['user_id']}</code>\n" \
           f"üë§ –õ–æ–≥–∏–Ω: <b>@{get_user['user_login']}</b>\n" \
           f"‚ìÇ –ò–º—è: <a href='tg://user?id={get_user['user_id']}'>{get_user['user_name']}</a>\n" \
           f"üï∞ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: <code>{get_user['user_date']} ({convert_day(how_days)})</code>\n" \
           f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
           f"üí∞ –ë–∞–ª–∞–Ω—Å: <code>{get_user['user_balance']}‚ÇΩ</code>\n" \
           f"üí∞ –í—Å–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–æ: <code>{get_user['user_refill']}‚ÇΩ</code>\n" \
           f"üéÅ –ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{count_items}—à—Ç</code>"


# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
def get_statisctics():
    show_profit_all, show_profit_day, show_profit_week = 0, 0, 0
    show_refill_all, show_refill_day, show_refill_week = 0, 0, 0
    show_money_users, show_buy_items = 0, 0

    get_categories = get_all_categoriesx()
    get_positions = get_all_positionsx()
    get_purchases = get_all_purchasesx()
    get_refill = get_all_refillx()
    get_settings = get_settingsx()
    get_items = get_all_itemsx()
    get_users = get_all_usersx()

    for purchase in get_purchases:
        show_profit_all += purchase['purchase_price']
        show_buy_items += purchase['purchase_count']
        if purchase['purchase_unix'] - get_settings['misc_profit_day'] >= 0:
            show_profit_day += purchase['purchase_price']
        if purchase['purchase_unix'] - get_settings['misc_profit_week'] >= 0:
            show_profit_week += purchase['purchase_price']

    for refill in get_refill:
        show_refill_all += refill['refill_amount']
        if refill['refill_unix'] - get_settings['misc_profit_day'] >= 0:
            show_refill_day += refill['refill_amount']
        if refill['refill_unix'] - get_settings['misc_profit_week'] >= 0:
            show_refill_week += refill['refill_amount']

    for user in get_users:
        show_money_users += user['user_balance']

    message = "<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>\n" \
              f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
              f"<b>üî∂ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: üî∂</b>\n" \
              f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <code>{len(get_users)}</code>\n" \
              f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
              f"<b>üî∂ –°—Ä–µ–¥—Å—Ç–≤–∞ üî∂</b>\n" \
              f"üí∏ –ü—Ä–æ–¥–∞–∂ –∑–∞ 24 —á–∞—Å–∞: <code>{show_profit_day}‚ÇΩ</code>\n" \
              f"üí∏ –ü—Ä–æ–¥–∞–∂ –∑–∞ –Ω–µ–¥–µ–ª—é: <code>{show_profit_week}‚ÇΩ</code>\n" \
              f"üí∏ –ü—Ä–æ–¥–∞–∂ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: <code>{show_profit_all}‚ÇΩ</code>\n" \
              f"üí≥ –°—Ä–µ–¥—Å—Ç–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: <code>{show_money_users}‚ÇΩ</code>\n" \
              f"üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–π –∑–∞ 24 —á–∞—Å–∞: <code>{show_refill_day}‚ÇΩ</code>\n" \
              f"üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–π –∑–∞ –Ω–µ–¥–µ–ª—é: <code>{show_refill_week}‚ÇΩ</code>\n" \
              f"üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: <code>{show_refill_all}‚ÇΩ</code>\n" \
              f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
              f"<b>üî∂ –ü—Ä–æ—á–µ–µ üî∂</b>\n" \
              f"üéÅ –¢–æ–≤–∞—Ä–æ–≤: <code>{len(get_items)}—à—Ç</code>\n" \
              f"üìÅ –ü–æ–∑–∏—Ü–∏–π: <code>{len(get_positions)}—à—Ç</code>\n" \
              f"üóÉ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: <code>{len(get_categories)}—à—Ç</code>\n" \
              f"üéÅ –ü—Ä–æ–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{show_buy_items}—à—Ç</code>\n"

    return message
