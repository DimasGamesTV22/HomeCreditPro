# - *- coding: utf- 8 - *-
import asyncio
import json
import time

from aiohttp import ClientConnectorCertificateError
from async_class import AsyncClass
from pyqiwip2p import QiwiP2P

from tgbot.services.api_session import RequestsSession
from tgbot.services.api_sqlite import update_paymentx, get_paymentx
from tgbot.utils.misc_functions import send_admins


# –ê–ø–∏ —Ä–∞–±–æ—Ç—ã —Å QIWI
class QiwiAPI(AsyncClass):
    async def __ainit__(self, dp, login=None, token=None, secret=None, add_pass=False,
                        check_pass=False, user_bill_pass=False, user_check_pass=False):
        if login is not None:
            self.login = login
            self.token = token
            self.secret = secret
        else:
            self.login = get_paymentx()['qiwi_login']
            self.token = get_paymentx()['qiwi_token']
            self.secret = get_paymentx()['qiwi_secret']

        self.base_url = "https://edge.qiwi.com/{}/{}/persons/{}/{}"
        self.headers = {"authorization": f"Bearer {self.token}"}
        self.nickname = get_paymentx()['qiwi_nickname']
        self.user_check_pass = user_check_pass
        self.user_bill_pass = user_bill_pass
        self.check_pass = check_pass
        self.add_pass = add_pass
        self.dp = dp

    # –†–∞—Å—Å—ã–ª–∫–∞ –∞–¥–º–∏–Ω–∞–º –æ –Ω–µ—Ä–∞–±–æ—á–µ–º –∫–∏–≤–∏
    @staticmethod
    async def error_wallet():
        await send_admins("<b>ü•ù Qiwi –∫–æ—à–µ–ª—ë–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚ùå</b>\n"
                          "‚ùó –ö–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –µ–≥–æ –∑–∞–º–µ–Ω–∏—Ç–µ ‚ùó")

    # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    async def pre_checker(self):
        if self.login != "None":
            if self.add_pass:
                status, response = await self.check_account()
            else:
                status, response, code = await self.check_logpass()
            await asyncio.sleep(0.5)

            if self.add_pass:
                await self.dp.edit_text(response)
                if status:
                    update_paymentx(qiwi_login=self.login, qiwi_token=self.token, qiwi_secret=self.secret)
                else:
                    return False
            elif self.check_pass:
                if status:
                    if self.secret == "None":
                        text_secret = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
                    else:
                        text_secret = self.secret

                    await self.dp.answer(f"<b>ü•ù Qiwi –∫–æ—à–µ–ª—ë–∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç ‚úÖ</b>\n"
                                         f"‚óæ –ù–æ–º–µ—Ä: <code>{self.login}</code>\n"
                                         f"‚óæ –¢–æ–∫–µ–Ω: <code>{self.token}</code>\n"
                                         f"‚óæ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: <code>{text_secret}</code>")
                else:
                    await self.error_wallet()
                    return False
            elif self.user_bill_pass:
                if not status:
                    await self.dp.edit_text(
                        "<b>‚ùó –ò–∑–≤–∏–Ω—è–µ–º—Å—è –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.\n"
                        "‚åõ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ.</b>")
                    await self.error_wallet()
                    return False
            elif self.user_check_pass:
                if not status:
                    await self.dp.answer(
                        "‚ùó –ò–∑–≤–∏–Ω—è–µ–º—Å—è –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞, –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n"
                        "‚åõ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ.", True)
                    await self.error_wallet()
                    return False
            elif not status:
                if not self.add_pass:
                    await self.error_wallet()
                    return False

            return True
        else:
            if self.user_bill_pass:
                await self.dp.edit_text(
                    "<b>‚ùó –ò–∑–≤–∏–Ω—è–µ–º—Å—è –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.\n"
                    "‚åõ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ.</b>")
            await self.error_wallet()
            return False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
    async def get_balance(self):
        response = await self.pre_checker()
        if response:
            status, response, code = await self._request(
                "funding-sources",
                "v2",
                "accounts",
            )

            save_balance = []
            for balance in response['accounts']:
                if "qw_wallet_usd" == balance['alias']:
                    save_balance.append(f"üá∫üá∏ –î–æ–ª–ª–∞—Ä–æ–≤: <code>{balance['balance']['amount']}$</code>")

                if "qw_wallet_rub" == balance['alias']:
                    save_balance.append(f"üá∑üá∫ –†—É–±–ª–µ–π: <code>{balance['balance']['amount']}‚ÇΩ</code>")

                if "qw_wallet_eur" == balance['alias']:
                    save_balance.append(f"üá™üá∫ –ï–≤—Ä–æ: <code>{balance['balance']['amount']}‚Ç¨</code>")

                if "qw_wallet_kzt" == balance['alias']:
                    save_balance.append(f"üá∞üáø –¢–µ–Ω–≥–µ: <code>{balance['balance']['amount']}‚Ç∏</code>")

            save_balance = "\n".join(save_balance)
            await self.dp.answer(f"<b>ü•ù –ë–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞ <code>{self.login}</code> —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç:</b>\n"
                                 f"{save_balance}")

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –∞–∫–∫–∞—É–Ω—Ç–∞
    async def get_nickname(self):
        response = await self.pre_checker()
        if response:
            status, response, code = await self._request(
                "qw-nicknames",
                "v1",
                "nickname",
            )

            if response['nickname'] is None:
                return False, "‚ùó –ù–∞ –∞–∫–∫–∞—É–Ω—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç QIWI –ù–∏–∫–Ω–µ–π–º. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–≤–æ–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞."
            else:
                return True, response['nickname']

        return False, ""

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ (–ª–æ–≥–ø–∞—Å–∞ –∏ –ø2–ø)
    async def check_account(self):
        status_history, response_history, code_history = await self.check_logpass()
        status_balance, response_balance, code_balance = await self._request(
            "funding-sources",
            "v2",
            "accounts"
        )

        if status_history and status_balance:
            if self.secret != "None":
                status_secret = await self.check_secret()
                if status_secret:
                    return True, "<b>ü•ù QIWI –∫–æ—à–µ–ª—ë–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω ‚úÖ</b>"
                else:
                    return_message = "<b>ü•ù –í–≤–µ–¥—ë–Ω–Ω—ã–µ QIWI –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É ‚ùå</b>\n" \
                                     "<code>‚ñ∂ –ö–æ–¥ –æ—à–∏–±–∫–∏: –ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á</code>\n" \
                                     "‚ùï –£–∫–∞–∑—ã–≤–∞–π—Ç–µ –ü–†–ò–í–ê–¢–ù–´–ô –ö–õ–Æ–ß, –∞ –Ω–µ –ø—É–±–ª–∏—á–Ω—ã–π. " \
                                     "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ ="
            else:
                return True, "<b>ü•ù QIWI –∫–æ—à–µ–ª—ë–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω ‚úÖ</b>"
        else:
            if 400 in [code_history, code_balance]:
                return_message = f"<b>ü•ù –í–≤–µ–¥—ë–Ω–Ω—ã–µ QIWI –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É ‚ùå</b>\n" \
                                 f"<code>‚ñ∂ –ö–æ–¥ –æ—à–∏–±–∫–∏: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É–∫–∞–∑–∞–Ω –≤ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ</code>"
            elif 401 in [code_history, code_balance]:
                return_message = f"<b>ü•ù –í–≤–µ–¥—ë–Ω–Ω—ã–µ QIWI –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É ‚ùå</b>\n" \
                                 f"<code>‚ñ∂ –ö–æ–¥ –æ—à–∏–±–∫–∏: –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –∏–ª–∏ –∏—Å—Ç–µ–∫ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞ API</code>"
            elif 403 in [code_history, code_balance]:
                return_message = f"<b>ü•ù –í–≤–µ–¥—ë–Ω–Ω—ã–µ QIWI –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É ‚ùå</b>\n" \
                                 f"<code>‚ñ∂ –û—à–∏–±–∫–∞: –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –¥–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π —É —Ç–æ–∫–µ–Ω–∞ API)</code>"
            elif "CERTIFICATE_VERIFY_FAILED" == code_history:
                return_message = "<b>ü•ù –í–≤–µ–¥—ë–Ω–Ω—ã–µ QIWI –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É ‚ùå</b>\n" \
                                 f"<code>‚ñ∂ –ö–æ–¥ –æ—à–∏–±–∫–∏: CERTIFICATE_VERIFY_FAILED certificate verify failed: self signed certificate in certificate chain</code>\n" \
                                 f"‚ùó –í–∞—à —Å–µ—Ä–≤–µ—Ä/–¥–µ–¥–∏–∫/—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ QIWI. –û—Ç–∫–ª—é—á–∏—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å –∏–ª–∏ –¥—Ä—É–≥–∏–µ –±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –ü–û."
            else:
                return_message = "<b>ü•ù –í–≤–µ–¥—ë–Ω–Ω—ã–µ QIWI –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É ‚ùå</b>\n" \
                                 f"<code>‚ñ∂ –ö–æ–¥ –æ—à–∏–±–∫–∏: {code_history}/{code_balance}</code>"

        return False, return_message

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–ø–∞—Å–∞ –∫–∏–≤–∏
    async def check_logpass(self):
        status, response, code = await self._request(
            "payment-history",
            "v2",
            "payments",
            {"rows": 1, "operation": "IN"},
        )

        if status:
            if "data" in response:
                return True, response, code
            else:
                return False, None, code
        else:
            return False, None, code

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø2–ø –∫–ª—é—á–∞
    async def check_secret(self):
        try:
            qiwi_p2p = QiwiP2P(self.secret)
            bill = qiwi_p2p.bill(amount=1, lifetime=1)
            qiwi_p2p.reject(bill_id=bill.bill_id)
            return True
        except:
            return False

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
    async def bill_pay(self, get_amount, get_way):
        response = await self.pre_checker()
        if response:
            receipt = str(int(time.time() * 100))

            if get_way == "Form":
                qiwi = QiwiP2P(self.secret)
                bill = qiwi.bill(bill_id=receipt, amount=get_amount, comment=receipt)
                send_requests = bill.pay_url

                return_message = f"<b>üÜô –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n" \
                                 f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                 f"ü•ù –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ \n" \
                                 f"<code>–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ</code> –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞–º —Å—á—ë—Ç\n" \
                                 f"‚ùó –£ –≤–∞—Å –∏–º–µ–µ—Ç—Å—è 30 –º–∏–Ω—É—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É —Å—á–µ—Ç–∞.\n" \
                                 f"üí∞ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <code>{get_amount}‚ÇΩ</code>\n" \
                                 f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                 f"üîÑ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <code>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É</code>"
            elif get_way == "Number":
                send_requests = f"https://qiwi.com/payment/form/99?extra%5B%27account%27%5D={self.login}&amountInteger=" \
                                f"{get_amount}&amountFraction=0&extra%5B%27comment%27%5D={receipt}&currency=" \
                                f"643&blocked%5B0%5D=sum&blocked%5B1%5D=comment&blocked%5B2%5D=account"

                return_message = f"<b>üÜô –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n" \
                                 f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                 f"ü•ù –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ \n" \
                                 f"<code>–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ</code> –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞–º —Å—á—ë—Ç\n" \
                                 f"üìû QIWI –∫–æ—à–µ–ª—ë–∫: <code>{self.login}</code>\n" \
                                 f"üè∑ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <code>{receipt}</code>\n" \
                                 f"üí∞ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <code>{get_amount}‚ÇΩ</code>\n" \
                                 f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                 f"üîÑ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <code>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É</code>"
            elif get_way == "Nickname":
                send_requests = f"https://qiwi.com/payment/form/99999?amountInteger={get_amount}&amountFraction=0&currency=643" \
                                f"&extra%5B%27comment%27%5D={receipt}&extra%5B%27account%27%5D={self.nickname}&blocked%5B0%5D=" \
                                f"comment&blocked%5B1%5D=account&blocked%5B2%5D=sum&0%5Bextra%5B%27accountType%27%5D%5D=nickname"

                return_message = f"<b>üÜô –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n" \
                                 f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                 f"ü•ù –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ \n" \
                                 f"<code>–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ</code> –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞–º —Å—á—ë—Ç\n" \
                                 f"‚ùó –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–∫–∞–∑–∞—Ç—å <u>–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô</u> –∫ –ø–ª–∞—Ç–µ–∂—É\n" \
                                 f"‚ìÇ QIWI –ù–∏–∫–Ω–µ–π–º: <code>{self.nickname}</code>\n" \
                                 f"üè∑ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <code>{receipt}</code>\n" \
                                 f"üí∞ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <code>{get_amount}‚ÇΩ</code>\n" \
                                 f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                 f"üîÑ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <code>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É</code>"

            return return_message, send_requests, receipt
        return False, False, False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ —Ñ–æ—Ä–º–µ
    async def check_form(self, receipt):
        qiwi_p2p = QiwiP2P(self.secret)
        get_pay = qiwi_p2p.check(bill_id=receipt)

        pay_status = get_pay.status  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
        pay_amount = int(float(get_pay.amount))  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –ø–ª–∞—Ç–µ–∂–∞ –≤ —Ä—É–±–ª—è—Ö

        return pay_status, pay_amount

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ –ø–µ—Ä–µ–≤–æ–¥—É
    async def check_send(self, receipt):
        response = await self.pre_checker()
        if response:
            status, response, code = await self._request(
                "payment-history",
                "v2",
                "payments",
                {"rows": 30, "operation": "IN"},
            )

            pay_status = False
            pay_amount = 0

            for check_pay in response['data']:
                if str(receipt) == str(check_pay['comment']):
                    if "643" == str(check_pay['sum']['currency']):
                        pay_status = True
                        pay_amount = int(float(check_pay['sum']['amount']))
                    else:
                        return_message = 1
                    break

            if pay_status:
                return_message = 3
            else:
                return_message = 2

            return return_message, pay_amount

        return 4, False

    # –ó–∞–ø—Ä–æ—Å—ã
    async def _request(self, action, version, get_way, params=None):
        url = self.base_url.format(action, version, self.login, get_way)

        rSession: RequestsSession = self.dp.bot['rSession']
        session = await rSession.get_session()

        try:
            response = await session.get(url, params=params, headers=self.headers, ssl=False)
            return True, json.loads((await response.read()).decode()), response.status
        except ClientConnectorCertificateError:
            return False, None, "CERTIFICATE_VERIFY_FAILED"
        except:
            return False, None, response.status
