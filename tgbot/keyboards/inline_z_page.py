# - *- coding: utf- 8 - *-
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton as ikb

from tgbot.services.api_sqlite import get_all_categoriesx, get_itemsx, get_positionsx

cpage = 10


# fp - flip page
# cpage - count page

################################################################################################
################################# –°–¢–†–ê–ù–ò–¶–´ –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ö–ê–¢–ï–ì–û–†–ò–ô #################################
# –°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
def category_edit_open_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"category_edit_here:{get_categories[a]['category_id']}:{remover}"))
        count += 1

    if len(get_categories) <= 10:
        pass
    elif len(get_categories) > cpage and remover < 10:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"catategory_edit_nextp:{remover + cpage}")
        )
    elif remover + cpage >= len(get_categories):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"catategory_edit_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"catategory_edit_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"catategory_edit_nextp:{remover + cpage}"),
        )

    return keyboard


# –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
def category_edit_next_page_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"category_edit_here:{get_categories[a]['category_id']}:{remover}"))
        count += 1
    if remover + cpage >= len(get_categories):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"catategory_edit_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"catategory_edit_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"catategory_edit_nextp:{remover + cpage}"),
        )

    return keyboard


# –ü—Ä–µ–¥—ã–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
def category_edit_back_page_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"category_edit_here:{get_categories[a]['category_id']}:{remover}"))
        count += 1

    if remover <= 0:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"catategory_edit_nextp:{remover + cpage}")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"catategory_edit_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"catategory_edit_nextp:{remover + cpage}"),
        )

    return keyboard


################################################################################################
################################### –°–¢–†–ê–ù–ò–¶–´ –°–û–ó–î–ê–ù–ò–Ø –ü–û–ó–ò–¶–ò–ô ##################################
# –°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
def position_create_open_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"position_create_here:{get_categories[a]['category_id']}"))
        count += 1

    if len(get_categories) <= 10:
        pass
    elif len(get_categories) > cpage:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_create_nextp:{remover + cpage}")
        )

    return keyboard


# –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
def position_create_next_page_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"position_create_here:{get_categories[a]['category_id']}"))
        count += 1

    if remover + cpage >= len(get_categories):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_create_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_create_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_create_nextp:{remover + cpage}"),
        )

    return keyboard


# –ü—Ä–µ–¥—ã–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
def position_create_back_page_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"position_create_here:{get_categories[a]['category_id']}"))
        count += 1

    if remover <= 0:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_create_nextp:{remover + cpage}")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_create_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_create_nextp:{remover + cpage}")
        )

    return keyboard


################################################################################################
################################## –°–¢–†–ê–ù–ò–¶–´ –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ü–û–ó–ò–¶–ò–ô ##################################
########################################### –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ##########################################
# –°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–∏
def position_edit_category_open_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"position_edit_category:{get_categories[a]['category_id']}"))
        count += 1

    if len(get_categories) <= 10:
        pass
    elif len(get_categories) > cpage and remover < 10:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_edit_category_nextp:{remover + cpage}")
        )
    elif remover + cpage >= len(get_categories):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_edit_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_edit_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_edit_category_nextp:{remover + cpage}"),
        )

    return keyboard


# –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–∏
def position_edit_category_next_page_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"position_edit_category:{get_categories[a]['category_id']}"))
        count += 1

    if remover + cpage >= len(get_categories):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_edit_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_edit_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_edit_category_nextp:{remover + cpage}"),
        )

    return keyboard


# –ü—Ä–µ–¥—ã–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–∏
def position_edit_category_back_page_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"position_edit_category:{get_categories[a]['category_id']}"))
        count += 1

    if remover <= 0:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_edit_category_nextp:{remover + cpage}")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_edit_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_edit_category_nextp:{remover + cpage}"),
        )

    return keyboard


########################################### –ü–û–ó–ò–¶–ò–ò ##########################################
# –°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è
def position_edit_open_fp(remover, category_id):
    get_positions = get_positionsx(category_id=category_id)
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_positions)):
        if count < cpage:
            get_items = get_itemsx(position_id=get_positions[a]['position_id'])
            keyboard.add(ikb(
                f"{get_positions[a]['position_name']} | {get_positions[a]['position_price']}‚ÇΩ | {len(get_items)} —à—Ç",
                callback_data=f"position_edit:{get_positions[a]['position_id']}:{remover}:{category_id}"))
        count += 1

    if len(get_positions) <= 10:
        pass
    elif len(get_positions) > cpage and remover < 10:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_edit_nextp:{remover + cpage}:{category_id}")
        )
    elif remover + cpage >= len(get_positions):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_edit_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_edit_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_edit_nextp:{remover + cpage}:{category_id}"),
        )
    keyboard.add(ikb("‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©", callback_data="position_edit_category_return"))

    return keyboard


# –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è
def position_edit_next_page_fp(remover, category_id):
    get_positions = get_positionsx(category_id=category_id)
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_positions)):
        if count < cpage:
            get_items = get_itemsx(position_id=get_positions[a]['position_id'])
            keyboard.add(ikb(
                f"{get_positions[a]['position_name']} | {get_positions[a]['position_price']}‚ÇΩ | {len(get_items)} —à—Ç",
                callback_data=f"position_edit:{get_positions[a]['position_id']}:{remover}:{category_id}"))
        count += 1

    if remover + cpage >= len(get_positions):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_edit_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_edit_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_edit_nextp:{remover + cpage}:{category_id}"),
        )
    keyboard.add(ikb("‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©", callback_data="position_edit_category_return"))

    return keyboard


# –ü—Ä–µ–¥—ã–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è
def position_edit_back_page_fp(remover, category_id):
    get_positions = get_positionsx(category_id=category_id)
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_positions)):
        if count < cpage:
            get_items = get_itemsx(position_id=get_positions[a]['position_id'])
            keyboard.add(ikb(
                f"{get_positions[a]['position_name']} | {get_positions[a]['position_price']}‚ÇΩ | {len(get_items)} —à—Ç",
                callback_data=f"position_edit:{get_positions[a]['position_id']}:{remover}:{category_id}"))
        count += 1

    if remover <= 0:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_edit_nextp:{remover + cpage}:{category_id}")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"position_edit_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"position_edit_nextp:{remover + cpage}:{category_id}"),
        )
    keyboard.add(ikb("‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©", callback_data="position_edit_category_return"))

    return keyboard


################################################################################################
################################## –°–¢–†–ê–ù–ò–¶–´ –î–û–ë–ê–í–õ–ï–ù–ò–Ø –¢–û–í–ê–†–û–í #################################
# –°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞
def products_add_category_open_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"products_add_category:{get_categories[a]['category_id']}"))
        count += 1

    if len(get_categories) <= 10:
        pass
    elif len(get_categories) > cpage and remover < 10:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"products_add_category_nextp:{remover + cpage}")
        )
    elif remover + cpage >= len(get_categories):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"products_add_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"products_add_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"products_add_category_nextp:{remover + cpage}"),
        )

    return keyboard


# –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞
def products_add_category_next_page_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"products_add_category:{get_categories[a]['category_id']}"))
        count += 1

    if remover + cpage >= len(get_categories):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"products_add_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"products_add_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"products_add_category_nextp:{remover + cpage}"),
        )

    return keyboard


# –ü—Ä–µ–¥—ã–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞
def products_add_category_back_page_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"products_add_category:{get_categories[a]['category_id']}"))
        count += 1

    if remover <= 0:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"products_add_category_nextp:{remover + cpage}")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"products_add_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"products_add_category_nextp:{remover + cpage}"),
        )

    return keyboard


########################################### –ü–û–ó–ò–¶–ò–ò ##########################################
# –°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
def products_add_position_open_fp(remover, category_id):
    get_positions = get_positionsx(category_id=category_id)
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_positions)):
        if count < cpage:
            get_items = get_itemsx(position_id=get_positions[a]['position_id'])
            keyboard.add(ikb(
                f"{get_positions[a]['position_name']} | {get_positions[a]['position_price']}‚ÇΩ | {len(get_items)} —à—Ç",
                callback_data=f"products_add_position:{get_positions[a]['position_id']}:{category_id}"))
        count += 1

    if len(get_positions) <= 10:
        pass
    elif len(get_positions) > cpage and remover < 10:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"products_add_position_nextp:{remover + cpage}:{category_id}")
        )
    elif remover + cpage >= len(get_positions):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"products_add_position_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"products_add_position_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"products_add_position_nextp:{remover + cpage}:{category_id}"),
        )
    keyboard.add(ikb("‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©", callback_data="back_add_products_to_category"))

    return keyboard


# –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
def products_add_position_next_page_fp(remover, category_id):
    get_positions = get_positionsx(category_id=category_id)
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_positions)):
        if count < cpage:
            get_items = get_itemsx(position_id=get_positions[a]['position_id'])
            keyboard.add(ikb(
                f"{get_positions[a]['position_name']} | {get_positions[a]['position_price']}‚ÇΩ | {len(get_items)} —à—Ç",
                callback_data=f"products_add_position:{get_positions[a]['position_id']}:{category_id}"))
        count += 1

    if remover + cpage >= len(get_positions):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"products_add_position_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"products_add_position_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"products_add_position_nextp:{remover + cpage}:{category_id}"),
        )
    keyboard.add(ikb("‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©", callback_data="back_add_products_to_category"))

    return keyboard


# –ü—Ä–µ–¥—ã–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
def products_add_position_back_page_fp(remover, category_id):
    get_positions = get_positionsx(category_id=category_id)
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_positions)):
        if count < cpage:
            get_items = get_itemsx(position_id=get_positions[a]['position_id'])
            keyboard.add(ikb(
                f"{get_positions[a]['position_name']} | {get_positions[a]['position_price']}‚ÇΩ | {len(get_items)} —à—Ç",
                callback_data=f"products_add_position:{get_positions[a]['position_id']}:{category_id}"))
        count += 1

    if remover <= 0:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"products_add_position_nextp:{remover + cpage}:{category_id}")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"products_add_position_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"products_add_position_nextp:{remover + cpage}:{category_id}"),
        )
    keyboard.add(ikb("‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©", callback_data="back_add_products_to_category"))

    return keyboard


################################################################################################
################################## –°–¢–†–ê–ù–ò–¶–´ –ü–û–ö–£–ü–ö–ò –¢–û–í–ê–†–û–í #################################
# –°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞
def products_item_category_open_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"buy_category_open:{get_categories[a]['category_id']}"))
        count += 1

    if len(get_categories) <= 10:
        pass
    elif len(get_categories) > cpage and remover < 10:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"buy_category_nextp:{remover + cpage}")
        )
    elif remover + cpage >= len(get_categories):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"buy_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"buy_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"buy_category_nextp:{remover + cpage}"),
        )

    return keyboard


# –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞
def products_item_category_next_page_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"buy_category_open:{get_categories[a]['category_id']}"))
        count += 1

    if remover + cpage >= len(get_categories):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"buy_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"buy_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"buy_category_nextp:{remover + cpage}"),
        )

    return keyboard


# –ü—Ä–µ–¥—ã–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞
def products_item_category_back_page_fp(remover):
    get_categories = get_all_categoriesx()
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_categories)):
        if count < cpage:
            keyboard.add(ikb(f"{get_categories[a]['category_name']}",
                             callback_data=f"buy_category_open:{get_categories[a]['category_id']}"))
        count += 1

    if remover <= 0:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"buy_category_nextp:{remover + cpage}")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"buy_category_backp:{remover - cpage}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"buy_category_nextp:{remover + cpage}"),
        )

    return keyboard


########################################### –ü–û–ó–ò–¶–ò–ò ##########################################
# –°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
def products_item_position_open_fp(remover, category_id):
    get_positions = get_positionsx(category_id=category_id)
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_positions)):
        if count < cpage:
            get_items = get_itemsx(position_id=get_positions[a]['position_id'])
            keyboard.add(ikb(
                f"{get_positions[a]['position_name']} | {get_positions[a]['position_price']}‚ÇΩ | {len(get_items)} —à—Ç",
                callback_data=f"buy_position_open:{get_positions[a]['position_id']}:{remover}:{category_id}"))
        count += 1

    if len(get_positions) <= 10:
        pass
    elif len(get_positions) > cpage and remover < 10:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"buy_position_nextp:{remover + cpage}:{category_id}")
        )
    elif remover + cpage >= len(get_positions):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"buy_position_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"buy_position_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"buy_position_nextp:{remover + cpage}:{category_id}"),

        )
    keyboard.add(ikb("‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©", callback_data=f"buy_category_return"))

    return keyboard


# –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
def products_item_position_next_page_fp(remover, category_id):
    get_positions = get_positionsx(category_id=category_id)
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_positions)):
        if count < cpage:
            get_items = get_itemsx(position_id=get_positions[a]['position_id'])
            keyboard.add(ikb(
                f"{get_positions[a]['position_name']} | {get_positions[a]['position_price']}‚ÇΩ | {len(get_items)} —à—Ç",
                callback_data=f"buy_position_open:{get_positions[a]['position_id']}:{remover}:{category_id}"))
        count += 1

    if remover + cpage >= len(get_positions):
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"buy_position_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="...")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"buy_position_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"buy_position_nextp:{remover + cpage}:{category_id}"),
        )
    keyboard.add(ikb("‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©", callback_data=f"buy_category_return"))

    return keyboard


# –ü—Ä–µ–¥—ã–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
def buy_position_return_page_fp(remover, category_id):
    get_positions = get_positionsx(category_id=category_id)
    keyboard = InlineKeyboardMarkup()
    count = 0

    for a in range(remover, len(get_positions)):
        if count < cpage:
            get_items = get_itemsx(position_id=get_positions[a]['position_id'])
            keyboard.add(
                ikb(f"{get_positions[a]['position_name']} | {get_positions[a]['position_price']}‚ÇΩ | {len(get_items)} —à—Ç",
                    callback_data=f"buy_position_open:{get_positions[a]['position_id']}:{remover}:{category_id}"))
        count += 1

    if remover <= 0:
        keyboard.add(
            ikb("üî∏ 1 üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"buy_position_nextp:{remover + cpage}:{category_id}")
        )
    else:
        keyboard.add(
            ikb("‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"buy_position_backp:{remover - cpage}:{category_id}"),
            ikb(f"üî∏ {str(remover + cpage)[:-1]} üî∏", callback_data="..."),
            ikb("–î–∞–ª–µ–µ ‚û°", callback_data=f"buy_position_nextp:{remover + cpage}:{category_id}"),
        )
    keyboard.add(ikb("‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è ‚Ü©", callback_data=f"buy_category_return"))

    return keyboard
